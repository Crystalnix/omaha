// Copyright 2008-2009 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// ========================================================================

#ifndef OMAHA_CORE_GOOGLE_UPDATE_CORE_H_
#define OMAHA_CORE_GOOGLE_UPDATE_CORE_H_

#include <windows.h>
#include <atlbase.h>
#include <atlcom.h>
#include <atlstr.h>
#include "omaha/common/atlregmapex.h"
#include "omaha/common/synchronized.h"
#include "omaha/goopdate/google_update_proxy.h"
#include "omaha/goopdate/resource.h"

// Generated by MIDL in the "BUILD_MODE.OBJ_ROOT + SETTINGS.SUBDIR".
#include "goopdate/google_update_idl.h"

namespace omaha {

// TODO(omaha): might need to synchronize on the GoogleUpdateCoreProxy.
typedef SharedMemoryProxy<IGoogleUpdateCore, FakeGLock> GoogleUpdateCoreProxy;

class ATL_NO_VTABLE GoogleUpdateCore
    : public CComObjectRootEx<CComMultiThreadModel>,
      public CComCoClass<GoogleUpdateCore>,
      public IGoogleUpdateCore {
 public:
  GoogleUpdateCore();
  virtual ~GoogleUpdateCore();

  DECLARE_NOT_AGGREGATABLE(GoogleUpdateCore)
  DECLARE_PROTECT_FINAL_CONSTRUCT()
  DECLARE_REGISTRY_RESOURCEID_EX(IDR_GOOGLE_UPDATE_CORE_CLASS)

  // C4640: construction of local static object is not thread-safe
  #pragma warning(disable : 4640)
  BEGIN_REGISTRY_MAP()
    REGMAP_ENTRY(_T("PROGID"),      _T("GoogleUpdate.CoreClass"))
    REGMAP_ENTRY(_T("VERSION"),     _T("1"))
    REGMAP_ENTRY(_T("NAME"),        _T("GoogleUpdateCoreClass"))
    REGMAP_ENTRY(_T("DESCRIPTION"), _T("Google Update Core Class"))
    REGMAP_UUID(_T("CLSID"),        __uuidof(GoogleUpdateCoreClass))
  END_REGISTRY_MAP()

  // C4505: unreferenced IUnknown local functions have been removed
  #pragma warning(disable : 4505)
  BEGIN_COM_MAP(GoogleUpdateCore)
    COM_INTERFACE_ENTRY(IGoogleUpdateCore)
  END_COM_MAP()

  // Launches a command line elevated.
  STDMETHOD(LaunchCmdElevated)(const WCHAR* app_guid,
                               const WCHAR* cmd_id,
                               DWORD caller_proc_id,
                               ULONG_PTR* proc_handle);
 private:
  // If the COM caller has permissions for process proc_id, opens and returns
  // the process handle.
  static HRESULT OpenCallerProcessHandle(DWORD proc_id, HANDLE* proc_handle);

  static CString GetCommandToLaunch(const TCHAR* app_guid, const TCHAR* cmd_id);

  static HRESULT LaunchCmd(CString* cmd,
                           HANDLE caller_proc_handle,
                           ULONG_PTR* proc_handle);

  friend class GoogleUpdateCoreTest;
  DISALLOW_EVIL_CONSTRUCTORS(GoogleUpdateCore);
};

}  // namespace omaha

#endif  // OMAHA_CORE_GOOGLE_UPDATE_CORE_H_


// Copyright 2009 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// ========================================================================

import "oaidl.idl";
import "ocidl.idl";

[
  object,
  uuid(d5c74868-1734-44e1-bab2-187a0ad2bd37),
  dual,
  pointer_default(unique)
]
interface IDispatchHostTestInterface : IDispatch {
  [id(1)] HRESULT Random([out, retval] INT* x);

  [propget] HRESULT Property([out, retval] INT* x);
  [propput] HRESULT Property([in] INT x);

  [propget] HRESULT ReadOnlyProperty([out, retval] INT* x);
  [propput] HRESULT WriteOnlyProperty([in] INT x);

  [id(2)] HRESULT AddAsMethod([in] INT a, [in] INT b, [out, retval] INT* c);
  [id(3), propget] HRESULT AddAsProperty([in] INT a, [in] INT b,
                                         [out, retval] INT* c);

  // TODO(omaha): do we need to test multi-argument property putters?

  [id(DISPID_VALUE)] HRESULT DidYouMeanRecursion([out, retval] IDispatch** me);
};

[
  object,
  uuid(0abeb84d-6a9c-4c5c-9394-6123c933baec),
  dual,
  pointer_default(unique)
]
interface IDispatchHostTestInterface2 : IDispatch {
  [id(DISPID_VALUE), propget] HRESULT Get([in] INT index, [out, retval] INT* x);
};

[
  uuid(65530e7f-4922-49e2-a5ee-c3e172da974a),
]
library DispatchHostTestingLib {
  importlib("stdole2.tlb");

  interface IDispatchHostTestInterface;
  interface IDispatchHostTestInterface2;
};

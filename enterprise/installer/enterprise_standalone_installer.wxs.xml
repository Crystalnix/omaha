<?xml version='1.0' encoding='windows-1252'?>
<Wix xmlns='http://schemas.microsoft.com/wix/2006/wi'>
  <?define CompanyFullName = 'Google, Inc.'?>
  <?define Copyright = 'Copyright 2007-2009 Google Inc.'?>
  <?define UpdateKeyPath = 'SOFTWARE\Google\Update' ?>

  <Product
    Id='$(var.MsiProductId)'
    Name='$(var.ProductName)'
    Language='1033'
    Codepage='1252'
    UpgradeCode='$(var.MsiUpgradeCode)'
    Version='$(var.ProductVersion)'
    Manufacturer='$(var.CompanyFullName)'>

    <Package
      Id='*'
      Description='$(var.ProductName) Installer'
      Comments='$(var.Copyright)'
      Manufacturer='$(var.CompanyFullName)'
      Languages='1033'
      SummaryCodepage='1252'
      InstallerVersion='150'
      InstallPrivileges='elevated'
      Compressed='yes' />

    <Upgrade Id='$(var.MsiUpgradeCode)'>
      <UpgradeVersion Property='UPGRADING'
                      OnlyDetect='no'
                      Minimum='0.0.0.0' IncludeMinimum='yes'
                      Maximum='$(var.ProductVersion)' IncludeMaximum='no' />
      <UpgradeVersion Property='NEWERVERSIONDETECTED' 
                      OnlyDetect='yes'
                      Minimum='$(var.ProductVersion)' IncludeMinimum='yes' />
    </Upgrade>

    <!-- Per-machine installation - make sure product appears for all users. -->
    <Property Id='ALLUSERS' Value='1' />

    <!-- Hide the Add/Remove Programs entry.
         The application installer should have its own entry. -->
    <Property Id='ARPSYSTEMCOMPONENT' Value='1' />

    <UI>
      <Error Id='4000'>A newer version of the $(var.ProductName) enterprise installer is already installed.</Error>
    </UI>

    <!-- Eliminates "warning LGHT1076 : ICE71: The Media table has no entries."
    -->
    <Media Id='1' />

    <Directory Id='TARGETDIR' Name='SourceDir'>
      <Directory Id='ProgramFilesFolder'>
        <Directory Id='GoogleProgramDir' Name='Google'>
          <Directory Id='UpdateDir' Name='Update'>

            <Component Id='ProductClientState'
                       Guid='6B528A57-0CD8-4b26-85F8-1CA05523B8F1'>
              <RegistryValue Id='NonEmptyComponent' Action='write'
                             Root='HKLM'
                             Key='$(var.UpdateKeyPath)\ClientState\$(var.ProductGuid)'
                             Name='EnterpriseInstall' Type='string' Value='$(var.ProductVersion)' />
            </Component>

          </Directory>
        </Directory>
      </Directory>
    </Directory>

    <Feature Id='Complete' Level='1'>
      <ComponentRef Id='ProductClientState' />
    </Feature>

    <!--TODO(omaha): Add "Standalone" after fixing the ProductName issue
        in standalone_installer.py.-->
    <Binary Id='$(var.ProductNameLegalIdentifier)Installer'
            SourceFile='$(var.StandaloneInstallerPath)' />

    <CustomAction Id='NewerVersionError' Error='4000'/>

    <CustomAction Id='SetProductTagProperty'
      Property='ProductTag'
      Value='appguid=$(var.ProductGuid)&amp;appname=$(var.ProductName)&amp;needsAdmin=True'
      Execute='immediate'
      Return='check' />
    <CustomAction Id='AppendCustomParamsToProductTagProperty'
      Property='ProductTag'
      Value='[ProductTag]$(var.ProductCustomParams)'
      Execute='immediate'
      Return='check' />
    <CustomAction Id='AppendBrandToProductTagProperty'
      Property='ProductTag'
      Value='[ProductTag]&amp;brand=[BRAND]'
      Execute='immediate'
      Return='check' />
    <CustomAction Id='DoInstall'
      BinaryKey='$(var.ProductNameLegalIdentifier)Installer'
      Impersonate='no'
      Execute='deferred'
      ExeCommand='/silent /install "[ProductTag]" /installsource enterprisemsi'
      Return='check' />

    <CustomAction Id='SetProductUninstallExe'
      Property='ProductUninstallExeProperty'
      Value='[SystemFolder]cmd.exe' />
    <CustomAction Id='Uninstall$(var.ProductNameLegalIdentifier)'
      Impersonate='no'
      Execute='deferred'
      Property='ProductUninstallExeProperty'
      ExeCommand='/c $(var.ProductUninstallCommandLine)'
      Return='check' />

    <InstallExecuteSequence>
      <RemoveExistingProducts After='InstallValidate' />

      <Custom Action='NewerVersionError' After='FindRelatedProducts'>
        NEWERVERSIONDETECTED
      </Custom>

      <!-- Build tag property. -->
      <Custom Action='SetProductTagProperty'
              Before='AppendCustomParamsToProductTagProperty'>
        (($ProductClientState>2) OR REINSTALL)
      </Custom>
      <Custom Action='AppendCustomParamsToProductTagProperty'
              Before='AppendBrandToProductTagProperty'>
        (($ProductClientState>2) OR REINSTALL)
      </Custom>
      <Custom Action='AppendBrandToProductTagProperty'
              Before='DoInstall'>
        (($ProductClientState>2) OR REINSTALL) AND (BRAND &lt;&gt; "")
      </Custom>

      <!-- TODO(omaha): Support Rollback? I do not think so because there are
           very few cases where the app could be installed but Omaha would
           report a failure. If we support rollback, need to determine whether
           Product was installed before and only add the rollback then.
      <Custom Action='Rollback$(var.ProductNameLegalIdentifier)'
              After='InstallFiles'>
        (($ProductClientState>2) OR REINSTALL) AND (NOT $(var.ProductNameLegalIdentifier)_INSTALLED)
      </Custom>
      Change After='InstallFiles' below to
      After='Rollback$(var.ProductNameLegalIdentifier)'. -->

      <Custom Action='DoInstall'
              After='InstallFiles'>
        (($ProductClientState>2) OR REINSTALL)
      </Custom>

      <Custom Action='SetProductUninstallExe'
              Before='Uninstall$(var.ProductNameLegalIdentifier)'>
        $ProductClientState=2
      </Custom>
      <Custom Action='Uninstall$(var.ProductNameLegalIdentifier)'
              Before='RemoveFiles'>
        $ProductClientState=2
      </Custom>

      <!-- Google Update will uninstall itself if the product is the only app it
           so no need to have an uninstall operation. -->

    </InstallExecuteSequence>

  </Product>
</Wix>

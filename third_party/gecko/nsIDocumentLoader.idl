/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: NPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Netscape Public License
 * Version 1.1 (the "License"); you may not use this file except in
 * compliance with the License. You may obtain a copy of the License at
 * http://www.mozilla.org/NPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is 
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1999
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or 
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the NPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the NPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

/* nsIDocumentLoader -->

*/

#include "nsISupports.idl"
interface nsILoadGroup;
interface nsIContentViewerContainer;
interface nsIChannel;
interface nsIURI;
interface nsIWebProgress;
interface nsIRequest;

[scriptable, uuid(f43ba260-0737-11d2-beb9-00805f8a66dc)]
interface nsIDocumentLoader : nsISupports
{
  void stop();
  boolean isBusy();
  void createDocumentLoader(out nsIDocumentLoader anInstance);

  attribute nsISupports container;
  
  [noscript] void getContentViewerContainer(in nsISupports aDocumentID, out nsIContentViewerContainer aResult);
  nsILoadGroup getLoadGroup();

  void destroy();
  // this should really be in a private interface as it is only
  // called between a parent doc loader and it's child.
  void clearParentDocLoader();
  readonly attribute nsIChannel documentChannel;

  void fireOnLocationChange(in nsIWebProgress aWebProgress,
                            in nsIRequest aRequest,
                            in nsIURI aUri);
  void fireOnStatusChange(in nsIWebProgress aWebProgress,
                          in nsIRequest aRequest,
                          in nsresult aStatus,
                          in wstring aMessage);
};

